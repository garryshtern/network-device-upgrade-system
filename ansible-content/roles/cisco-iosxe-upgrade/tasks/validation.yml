---
# Validation Tasks for Cisco IOS-XE Devices
# Post-upgrade verification and state validation

- name: Basic system validation
  block:
    - name: Verify system is responsive
      cisco.ios.ios_command:
        commands:
          - show version
      register: version_check
      when: not ansible_check_mode

    - name: Verify target version is active
      ansible.builtin.assert:
        that:
          - target_firmware_version in version_check.stdout[0]
        fail_msg: >
          "Target firmware version not active: {{ version_check.stdout[0] }}"
      when: not ansible_check_mode

    - name: Check system uptime
      cisco.ios.ios_command:
        commands:
          - show version | include uptime
      register: uptime_check
      when: not ansible_check_mode

- name: Interface validation
  block:
    - name: Get interface status
      cisco.ios.ios_command:
        commands:
          - show ip interface brief
      register: interface_status
      when: not ansible_check_mode

    - name: Verify critical interfaces are up
      ansible.builtin.assert:
        that:
          - "'up' in interface_status.stdout[0]"
        fail_msg: "Critical interfaces may be down"
      when: not ansible_check_mode

- name: Routing validation
  block:
    - name: Check routing table
      cisco.ios.ios_command:
        commands:
          - show ip route summary
      register: routing_summary
      when: not ansible_check_mode

    - name: Verify default route exists
      cisco.ios.ios_command:
        commands:
          - show ip route 0.0.0.0
      register: default_route
      when: not ansible_check_mode
      failed_when: false

    - name: Check BGP status (if configured)
      cisco.ios.ios_command:
        commands:
          - show ip bgp summary
      register: bgp_status
      when: not ansible_check_mode
      failed_when: false
  when: not ansible_check_mode

- name: ARP validation
  block:
    - name: Check ARP table
      cisco.ios.ios_command:
        commands:
          - show arp
      register: arp_table
      when: not ansible_check_mode

    - name: Verify ARP entries exist
      ansible.builtin.assert:
        that:
          - arp_table.stdout[0] | length > 100
        fail_msg: "ARP table appears empty or minimal"
      when: not ansible_check_mode
  when: not ansible_check_mode

- name: System health validation
  block:
    - name: Check CPU utilization
      cisco.ios.ios_command:
        commands:
          - show processes cpu sorted
      register: cpu_usage
      when: not ansible_check_mode

    - name: Check memory utilization
      cisco.ios.ios_command:
        commands:
          - show memory statistics
      register: memory_stats
      when: not ansible_check_mode

    - name: Check for error messages
      cisco.ios.ios_command:
        commands:
          - show logging | include ERROR
      register: error_logs
      when: not ansible_check_mode
      failed_when: false
  when: not ansible_check_mode

- name: IPSec tunnel validation
  ansible.builtin.include_tasks: ipsec-validation.yml
  when:
    - validate_ipsec is defined
    - validate_ipsec | bool
  tags:
    - ipsec
    - validation

- name: BFD session validation
  ansible.builtin.include_tasks: bfd-validation.yml
  when:
    - validate_bfd is defined
    - validate_bfd | bool
  tags:
    - bfd
    - validation

- name: Interface optics validation
  ansible.builtin.include_tasks: optics-validation.yml
  when:
    - validate_optics is defined
    - validate_optics | bool
    - not ansible_check_mode
  tags:
    - optics
    - validation

- name: Log validation results
  ansible.builtin.debug:
    msg: |-
      IOS-XE Validation Results:
      ==========================
      - >-
        Version: {{
          'PASS' if target_firmware_version in version_check.stdout[0]
          else 'FAIL'
        }}
      - >
        Interfaces:
        {{ 'PASS' if 'up' in interface_status.stdout[0] else 'CHECK' }}
      - Routing: {{ 'PASS' if routing_summary.stdout[0] else 'CHECK' }}
      - >
        ARP Table:
        {{ 'PASS' if arp_table.stdout[0] | length > 100 else 'CHECK' }}
      - BGP: {{ 'PASS' if bgp_status.rc == 0 else 'N/A' }}
      - >-
        IPSec: {{ 'VALIDATED' if (validate_ipsec is defined and validate_ipsec |
          bool) else 'SKIPPED' }}
      - >-
        BFD: {{ 'VALIDATED' if (validate_bfd is defined and validate_bfd |
          bool) else 'SKIPPED' }}
      - >-
        Optics: {{
          'VALIDATED' if (validate_optics is defined and validate_optics
          | bool) else 'SKIPPED'
        }}
      - Errors: {{ 'NONE' if error_logs.stdout[0] == '' else 'CHECK LOGS' }}
  when: not ansible_check_mode
