---
# IPSec/VPN Validation Tasks for Cisco IOS-XE Devices
# Validates IPSec tunnel status and VPN connectivity post-upgrade

- name: IPSec tunnel validation
  block:
    - name: Check IPSec session status
      cisco.ios.ios_command:
        commands:
          - show crypto session
      register: crypto_sessions
      failed_when: false

    - name: Check IPSec SA status
      cisco.ios.ios_command:
        commands:
          - show crypto ipsec sa
      register: ipsec_sa_status
      failed_when: false

    - name: Check ISAKMP SA status
      cisco.ios.ios_command:
        commands:
          - show crypto isakmp sa
      register: isakmp_sa_status
      failed_when: false

    - name: Check crypto engine status
      cisco.ios.ios_command:
        commands:
          - show crypto engine brief
      register: crypto_engine
      failed_when: false

- name: Parse IPSec validation results
  block:
    - name: Extract active IPSec tunnels
      ansible.builtin.set_fact:
        active_ipsec_tunnels: >-
          {{ ipsec_sa_status.stdout[0] |
             regex_findall('interface:\s+(\S+).*?#pkts encaps:\s+(\d+).*?#pkts decaps:\s+(\d+)', multiline=True) }}
      when: ipsec_sa_status.rc == 0

    - name: Extract ISAKMP sessions
      ansible.builtin.set_fact:
        isakmp_sessions: >-
          {{ isakmp_sa_status.stdout[0] |
             regex_findall('(\d+\.\d+\.\d+\.\d+)\s+(\d+\.\d+\.\d+\.\d+)\s+\S+\s+(\S+)', multiline=True) }}
      when: isakmp_sa_status.rc == 0

    - name: Count crypto sessions
      ansible.builtin.set_fact:
        total_crypto_sessions: >-
          {{ crypto_sessions.stdout[0] | regex_findall('Session status:\s+UP') | length }}
      when: crypto_sessions.rc == 0

- name: Validate IPSec health
  block:
    - name: Verify IPSec tunnels are active
      ansible.builtin.assert:
        that:
          - active_ipsec_tunnels | length > 0
        fail_msg: "No active IPSec tunnels found. Expected at least one active tunnel."
        success_msg: "{{ active_ipsec_tunnels | length }} active IPSec tunnel(s) found"
      when:
        - ipsec_sa_status.rc == 0
        - active_ipsec_tunnels is defined

    - name: Verify ISAKMP phase 1 sessions
      ansible.builtin.assert:
        that:
          - isakmp_sessions | length > 0
        fail_msg: "No active ISAKMP sessions found"
        success_msg: "{{ isakmp_sessions | length }} ISAKMP session(s) active"
      when:
        - isakmp_sa_status.rc == 0
        - isakmp_sessions is defined

    - name: Verify crypto sessions are up
      ansible.builtin.assert:
        that:
          - total_crypto_sessions | int > 0
        fail_msg: "No crypto sessions in UP state"
        success_msg: "{{ total_crypto_sessions }} crypto session(s) up"
      when:
        - crypto_sessions.rc == 0
        - total_crypto_sessions is defined

- name: Check VPN traffic flow
  block:
    - name: Verify IPSec traffic counters
      ansible.builtin.assert:
        that:
          - item[1] | int > 0 or item[2] | int > 0
        fail_msg: "No traffic on IPSec tunnel {{ item[0] }}"
        success_msg: "IPSec tunnel {{ item[0] }} has traffic (encaps: {{ item[1] }}, decaps: {{ item[2] }})"
      loop: "{{ active_ipsec_tunnels }}"
      when:
        - active_ipsec_tunnels is defined
        - active_ipsec_tunnels | length > 0

- name: IPSec validation summary
  ansible.builtin.debug:
    msg: |
      IPSec Validation Summary:
      ========================
      Active IPSec Tunnels: {{ active_ipsec_tunnels | length if active_ipsec_tunnels is defined else 'N/A' }}
      ISAKMP Sessions: {{ isakmp_sessions | length if isakmp_sessions is defined else 'N/A' }}
      Crypto Sessions Up: {{ total_crypto_sessions if total_crypto_sessions is defined else 'N/A' }}
      {% if active_ipsec_tunnels is defined %}
      Tunnel Details:
      {% for tunnel in active_ipsec_tunnels %}
      - Interface: {{ tunnel[0] }}, Encaps: {{ tunnel[1] }}, Decaps: {{ tunnel[2] }}
      {% endfor %}
      {% endif %}

- name: Store IPSec validation baseline
  ansible.builtin.copy:
    content: |
      # IPSec Validation Baseline - {{ lookup('pipe', 'date -u +%Y-%m-%dT%H:%M:%SZ') }}
      # Generated during firmware upgrade validation

      Active_IPSec_Tunnels: {{ active_ipsec_tunnels | length if active_ipsec_tunnels is defined else 0 }}
      ISAKMP_Sessions: {{ isakmp_sessions | length if isakmp_sessions is defined else 0 }}
      Crypto_Sessions_Up: {{ total_crypto_sessions if total_crypto_sessions is defined else 0 }}

      {% if active_ipsec_tunnels is defined %}
      Tunnel_Details:
      {% for tunnel in active_ipsec_tunnels %}
        - Interface: {{ tunnel[0] }}
          Encaps_Packets: {{ tunnel[1] }}
          Decaps_Packets: {{ tunnel[2] }}
      {% endfor %}
      {% endif %}

      Validation_Status: PASS
      Timestamp: {{ lookup('pipe', 'date -u +%Y-%m-%dT%H:%M:%SZ') }}
    dest: "/tmp/ipsec_validation_{{ inventory_hostname }}_{{ ansible_play_batch | hash('md5') }}.txt"
    mode: "0644"
  delegate_to: localhost
