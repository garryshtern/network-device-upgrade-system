---
# Cisco IOS-XE Upgrade Role - Main Tasks
# Handles both install mode and bundle mode upgrades

- name: Initialize IOS-XE upgrade variables
  ansible.builtin.set_fact:
    iosxe_upgrade_state:
      device: "{{ inventory_hostname }}"
      current_version: ""
      target_version: "{{ target_firmware_version }}"
      install_mode: false
      boot_mode: "bundle"
      available_space: 0
      required_space: 0

- name: Gather IOS-XE device facts
  cisco.ios.ios_facts:
    gather_subset:
      - hardware
      - config
      - interfaces
  register: iosxe_facts

- name: Set current firmware version
  ansible.builtin.set_fact:
    iosxe_upgrade_state: >
      "{{ iosxe_upgrade_state | combine({'current_version':
        iosxe_facts.ansible_facts.ansible_net_version}) }}"

- name: Determine platform-specific firmware filename
  block:
    - name: Extract device model
      ansible.builtin.set_fact:
        device_model: "{{ iosxe_facts.ansible_facts.ansible_net_model }}"

    - name: Determine device platform family
      ansible.builtin.set_fact:
        device_platform: >-
          {%- for pattern in device_model_patterns -%}
            {%- if device_model is match(pattern.regex) -%}
              {{ pattern.platform }}
            {%- endif -%}
          {%- endfor -%}

    - name: Set firmware filename pattern
      ansible.builtin.set_fact:
        firmware_filename: >-
          {%- if device_platform and
              device_platform in firmware_filename_patterns -%}
            {%- set platform_patterns =
                firmware_filename_patterns[device_platform] -%}
            {%- if device_model in platform_patterns -%}
              {{ platform_patterns[device_model] }}
            {%- else -%}
              {{ platform_patterns.default }}
            {%- endif -%}
          {%- else -%}
            cat9k_iosxe.{{ target_firmware_version }}.SPA.bin
          {%- endif -%}

    - name: Set firmware paths
      ansible.builtin.set_fact:
        local_firmware_path: "{{ firmware_base_path }}/{{ firmware_filename }}"
        target_image_path: "bootflash:{{ firmware_filename }}"

    - name: Display firmware selection
      ansible.builtin.debug:
        msg:
          - "Device Model: {{ device_model }}"
          - "Platform Family: {{ device_platform | default('generic') }}"
          - "Firmware File: {{ firmware_filename }}"
          - "Local Path: {{ local_firmware_path }}"
          - "Target Path: {{ target_image_path }}"

- name: Check install mode capability
  ansible.builtin.include_tasks: check-install-mode.yml

- name: Display upgrade plan
  ansible.builtin.debug:
    msg: |
      IOS-XE Upgrade Plan for {{ inventory_hostname }}:
      Current Version: {{ iosxe_upgrade_state.current_version }}
      Target Version: {{ iosxe_upgrade_state.target_version }}
      Install Mode: {{ iosxe_upgrade_state.install_mode }}
      Boot Mode: {{ iosxe_upgrade_state.boot_mode }}

- name: Validate upgrade path
  ansible.builtin.assert:
    that:
      - iosxe_upgrade_state.current_version
        != iosxe_upgrade_state.target_version
      - iosxe_upgrade_state.target_version is match("^[0-9]+\\.[0-9]+\\.[0-9]+")
    fail_msg: "Invalid upgrade path or target version format"

- name: Execute upgrade based on mode
  ansible.builtin.include_tasks: "{{ upgrade_task_file }}"
  vars:
    upgrade_task_file: >-
      {{ 'install-mode.yml' if iosxe_upgrade_state.install_mode
         else 'bundle-mode.yml' }}
