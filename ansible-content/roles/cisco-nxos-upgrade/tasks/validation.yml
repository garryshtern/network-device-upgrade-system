---
# Cisco NX-OS Validation Tasks
# Comprehensive device health and state validation

- name: Gather NX-OS system information
  cisco.nxos.nxos_command:
    commands:
      - show version | json
      - show boot | json
      - show system resources | json
      - show interface brief | json
  register: nxos_system_info

- name: Parse system information
  ansible.builtin.set_fact:
    nxos_version_info: "{{ nxos_system_info.stdout[0] | from_json }}"
    nxos_boot_info: "{{ nxos_system_info.stdout[1] | from_json }}"
    nxos_resources: "{{ nxos_system_info.stdout[2] | from_json }}"
    nxos_interfaces: "{{ nxos_system_info.stdout[3] | from_json }}"

- name: Check system health indicators
  cisco.nxos.nxos_command:
    commands:
      - show logging last 20
      - show processes cpu | json
      - show system internal flash
  register: nxos_health_check

- name: Validate critical system parameters
  ansible.builtin.assert:
    that:
      - nxos_resources.cpu_usage_kernel < 80
      - nxos_resources.memory_usage_kernel < 85
      - nxos_resources.load_avg_1min < 5.0
    fail_msg: >
      "System resources are under stress - CPU: {{ nxos_resources.cpu_usage_kernel
        }}%, Memory: {{ nxos_resources.memory_usage_kernel }}%"

- name: Check VPC consistency (if VPC is configured)
  when: nxos_vpc_consistency_check | default(true)

  block:
    - name: Get VPC status
      cisco.nxos.nxos_command:
        commands:
          - show vpc brief | json
      register: vpc_status

    - name: Validate VPC peer connectivity
      ansible.builtin.assert:
        that:
          - "'peer-link is up' in vpc_status.stdout[0]"
          - "'peer is alive' in vpc_status.stdout[0]"
        fail_msg: "VPC peer connectivity issues detected"
      when: vpc_status.stdout[0] | length > 0

  rescue:
    - name: VPC not configured - skipping VPC validation
      ansible.builtin.debug:
        msg: "VPC not configured on this device, skipping VPC validation"
- name: Validate BGP neighbors (if BGP is configured)
  block:
    - name: Get BGP neighbor status
      cisco.nxos.nxos_command:
        commands:
          - show bgp ipv4 unicast summary | json
          - show bgp ipv6 unicast summary | json
      register: bgp_status
      failed_when: false

    - name: Check BGP neighbor states
      ansible.builtin.set_fact:
        bgp_neighbors_down: >
          "{{ bgp_status.stdout[0] | from_json |
            json_query('TABLE_neighbor.ROW_neighbor[?state != `Established`]') | length }}"
      when: bgp_status is succeeded and bgp_status.stdout[0] | length > 0

    - name: Warn about BGP neighbors down
      ansible.builtin.debug:
        msg: >
          "Warning: {{ bgp_neighbors_down }}
            BGP neighbors are not in Established state"
      when:
        - bgp_neighbors_down is defined
        - bgp_neighbors_down | int > 0

  rescue:
    - name: BGP not configured - skipping BGP validation
      ansible.builtin.debug:
        msg: "BGP not configured on this device, skipping BGP validation"

- name: Check interface status
  ansible.builtin.set_fact:
    interfaces_down: >
      "{{ nxos_interfaces | json_query('TABLE_interface.ROW_interface[?state
        != `up`]') | length }}"

- name: Validate interface states
  ansible.builtin.debug:
    msg: "{{ interfaces_down }} interfaces are currently down"

- name: Check for critical log messages
  ansible.builtin.set_fact:
    critical_logs: >-
      {{ nxos_health_check.stdout[0] |
        regex_findall('.*CRITICAL.*|.*ERROR.*|.*FAIL.*') }}

- name: Display critical log messages if found
  ansible.builtin.debug:
    msg: "Critical log messages found: {{ critical_logs }}"
  when: critical_logs | length > 0

- name: IGMP validation
  ansible.builtin.include_tasks: igmp-validation.yml
  when:
    - validate_igmp is defined
    - validate_igmp | bool
  tags:
    - igmp
    - multicast
    - validation

- name: Enhanced BFD validation
  ansible.builtin.include_tasks: bfd-validation.yml
  when:
    - validate_bfd is defined
    - validate_bfd | bool
  tags:
    - bfd
    - validation

- name: Set validation results
  ansible.builtin.set_fact:
    nxos_validation_results:
      device_healthy: >-
        {{ nxos_resources.cpu_usage_kernel < 80 and
          nxos_resources.memory_usage_kernel < 85 }}
      interfaces_up: "{{ interfaces_down | int == 0 }}"
      bgp_neighbors_up: "{{ (bgp_neighbors_down | default(0)) | int == 0 }}"
      critical_logs_present: "{{ critical_logs | length > 0 }}"
      igmp_validated: >-
        {{ 'PASS' if (validate_igmp is defined and validate_igmp |
          bool) else 'SKIPPED' }}
      bfd_validated: >-
        {{ 'PASS' if (validate_bfd is defined and validate_bfd |
          bool) else 'SKIPPED' }}
      validation_timestamp: >
        "{{ lookup('pipe', 'date -u +%Y-%m-%dT%H:%M:%SZ') }}"

- name: Display comprehensive validation summary
  ansible.builtin.debug:
    msg: |-
      NX-OS Validation Summary:
      ========================
      Device Health: >
        {{ 'PASS' if nxos_validation_results.device_healthy else 'FAIL' }}
      Interfaces: >
      {{ 'PASS' if nxos_validation_results.interfaces_up else
          'CHECK' }} ({{ interfaces_down }} down)
      BGP Neighbors: >
        {{ 'PASS' if nxos_validation_results.bgp_neighbors_up else 'CHECK' }}
      Critical Logs: >
      {{ 'PRESENT' if nxos_validation_results.critical_logs_present else
          'NONE' }}
      IGMP Validation: {{ nxos_validation_results.igmp_validated }}
      BFD Validation: {{ nxos_validation_results.bfd_validated }}

      Overall Status:
      {{ 'PASS' if (nxos_validation_results.device_healthy and
          nxos_validation_results.interfaces_up and nxos_validation_results.bgp_neighbors_up and not nxos_validation_results.critical_logs_present) else 'CHECK REQUIRED' }}
