---
# IGMP (Internet Group Management Protocol) Validation Tasks for Cisco NX-OS
# Devices
# Validates IGMP snooping, groups, and multicast forwarding post-upgrade

- name: IGMP configuration and status validation
  block:
    - name: Check IGMP snooping status
      cisco.nxos.nxos_command:
        commands:
          - show ip igmp snooping | json
      register: igmp_snooping_status
      failed_when: false
      when: not ansible_check_mode

    - name: Check IGMP interface configuration
      cisco.nxos.nxos_command:
        commands:
          - show ip igmp interface | json
      register: igmp_interface_config
      failed_when: false
      when: not ansible_check_mode

    - name: Check IGMP groups
      cisco.nxos.nxos_command:
        commands:
          - show ip igmp groups | json
      register: igmp_groups
      failed_when: false
      when: not ansible_check_mode

    - name: Check IGMP snooping groups
      cisco.nxos.nxos_command:
        commands:
          - show ip igmp snooping groups | json
      register: igmp_snooping_groups
      failed_when: false
      when: not ansible_check_mode

- name: Parse IGMP snooping configuration
  block:
    - name: Extract IGMP snooping status per VLAN
      ansible.builtin.set_fact:
        igmp_snooping_vlans: >-
          {{ igmp_snooping_status.stdout[0] | from_json |
             json_query('TABLE_vlan.ROW_vlan[*].{vlan:
               vlan_id, enabled: snooping_enabled}') }}
      when:
        - not ansible_check_mode
        - igmp_snooping_status is defined
        - igmp_snooping_status.rc == 0
        - igmp_snooping_status.stdout[0] | length > 10

    - name: Count enabled IGMP snooping VLANs
      ansible.builtin.set_fact:
        igmp_enabled_vlans: >-
          {{ igmp_snooping_vlans | selectattr('enabled',
            'equalto', 'true') | list | length }}
        igmp_total_vlans: >-
          {{ igmp_snooping_vlans | length }}
      when: igmp_snooping_vlans is defined

- name: Parse IGMP interface information
  block:
    - name: Extract IGMP interface details
      ansible.builtin.set_fact:
        igmp_interfaces: >-
          {{ igmp_interface_config.stdout[0] | from_json |
             json_query('TABLE_intf.ROW_intf[*].{interface: >
               intf_name, version: version, querier: querier_addr}') }}
      when:
        - not ansible_check_mode
        - igmp_interface_config is defined
        - igmp_interface_config.rc == 0
        - igmp_interface_config.stdout[0] | length > 10

    - name: Count IGMP enabled interfaces
      ansible.builtin.set_fact:
        igmp_active_interfaces: "{{ igmp_interfaces | length }}"
      when: igmp_interfaces is defined

- name: Parse IGMP group membership
  block:
    - name: Extract IGMP group information
      ansible.builtin.set_fact:
        igmp_active_groups: >-
          {{ igmp_groups.stdout[0] | from_json |
             json_query('TABLE_group.ROW_group[*].{group: >
               grp_addr, interface: intf_name, mode: mode, uptime: uptime}') }}
      when:
        - not ansible_check_mode
        - igmp_groups is defined
        - igmp_groups.rc == 0
        - igmp_groups.stdout[0] | length > 10

    - name: Extract IGMP snooping group information
      ansible.builtin.set_fact:
        igmp_snooping_active_groups: >-
          {{ igmp_snooping_groups.stdout[0] | from_json |
             json_query('TABLE_group.ROW_group[*].{group: >
               grp_addr, vlan: vlan_id, ports: port_list}') }}
      when:
        - not ansible_check_mode
        - igmp_snooping_groups is defined
        - igmp_snooping_groups.rc == 0
        - igmp_snooping_groups.stdout[0] | length > 10

    - name: Count total IGMP groups
      ansible.builtin.set_fact:
        total_igmp_groups: >-
          {{ (igmp_active_groups | length) +
            (igmp_snooping_active_groups | length) }}
      when:
        - igmp_active_groups is defined
        - igmp_snooping_active_groups is defined

- name: Validate IGMP health and functionality
  block:
    - name: Verify IGMP snooping is active on VLANs
      ansible.builtin.assert:
        that:
          - igmp_enabled_vlans is defined
          - igmp_enabled_vlans | int > 0
        fail_msg: "No VLANs have IGMP snooping enabled"
        success_msg: >
          "{{ igmp_enabled_vlans }} VLAN(s) have IGMP
            snooping enabled out of {{ igmp_total_vlans }} total"
      when: igmp_snooping_vlans is defined

    - name: Verify IGMP is configured on interfaces
      ansible.builtin.assert:
        that:
          - igmp_active_interfaces is defined
          - igmp_active_interfaces | int > 0
        fail_msg: "No interfaces have IGMP enabled"
        success_msg: >
          "{{ igmp_active_interfaces }} interface(s) have IGMP enabled"
      when: igmp_interfaces is defined

    - name: Verify IGMP groups are present (if expected)
      ansible.builtin.assert:
        that:
          - total_igmp_groups is defined
          - total_igmp_groups | int >= 0
        fail_msg: "IGMP group validation failed"
        success_msg: >
          "{{ total_igmp_groups }} total IGMP group memberships found"
      when: total_igmp_groups is defined

- name: Check IGMP querier functionality
  block:
    - name: Verify IGMP queriers are active
      ansible.builtin.set_fact:
        igmp_queriers: >-
          {{ igmp_interfaces | selectattr('querier', 'defined') |
             selectattr('querier', '!=', '0.0.0.0') | list }}
      when: igmp_interfaces is defined

    - name: Validate querier presence
      ansible.builtin.assert:
        that:
          - igmp_queriers is defined
          - igmp_queriers | length > 0
        fail_msg: "No active IGMP queriers found"
        success_msg: "{{ igmp_queriers | length }} active IGMP querier(s) found"
      when:
        - igmp_queriers is defined
        - igmp_interfaces is defined
        - igmp_interfaces | length > 0

- name: Advanced IGMP diagnostics
  block:
    - name: Check IGMP statistics
      cisco.nxos.nxos_command:
        commands:
          - show ip igmp snooping statistics
      register: igmp_statistics
      failed_when: false
      when: not ansible_check_mode

    - name: Check for IGMP errors or warnings in logs
      cisco.nxos.nxos_command:
        commands:
          - show logging last 50 | include -i igmp
      register: igmp_logs
      failed_when: false
      when: not ansible_check_mode

    - name: Parse IGMP error conditions
      ansible.builtin.set_fact:
        igmp_errors: >-
          {{ igmp_logs.stdout[0] |
            regex_findall('.*ERROR.*igmp.*|.*WARN.*igmp.*', ignorecase=True) }}
      when:
        - not ansible_check_mode
        - igmp_logs is defined
        - igmp_logs.rc == 0
        - igmp_logs.stdout[0] | length > 0

    - name: Check for IGMP errors
      ansible.builtin.assert:
        that:
          - igmp_errors | length == 0
        fail_msg: >
          "IGMP errors found in logs: {{
            igmp_errors[:3] }}" # Show first 3 errors
        success_msg: "No IGMP errors found in recent logs"
      when: igmp_errors is defined

- name: IGMP validation summary
  ansible.builtin.debug:
    msg: |
      IGMP Validation Summary:
      ========================
      IGMP Snooping VLANs: >
      {{ igmp_enabled_vlans if igmp_enabled_vlans is defined else
          'N/A' }}/{{ igmp_total_vlans if igmp_total_vlans is defined
          else 'N/A' }}
      IGMP Interfaces: >
      {{ igmp_active_interfaces if igmp_active_interfaces is defined else
          'N/A' }}
      Total IGMP Groups: >
        {{ total_igmp_groups if total_igmp_groups is defined else 'N/A' }}
      Active Queriers: >
        {{ igmp_queriers | length if igmp_queriers is defined else 'N/A' }}

      {% if igmp_interfaces is defined %}
      IGMP Interface Details:
      {% for intf in igmp_interfaces %}
      - >: >-
          {{ intf.interface }}: Version {{ intf.version }},
          Querier {{ intf.querier }}
      {% endfor %}
      {% endif %}

      {% if igmp_active_groups is defined and igmp_active_groups | length > 0 %}
      Active IGMP Groups (first 5):
      {% for group in igmp_active_groups[:5] %}
      - {{ group.group }} on {{ group.interface }} ({{ group.mode }})
      {% endfor %}
      {% endif %}

      {% if igmp_snooping_active_groups is defined
        and igmp_snooping_active_groups | length > 0 %}
      IGMP Snooping Groups (first 5):
      {% for group in igmp_snooping_active_groups[:5] %}
      - {{ group.group }} in VLAN {{ group.vlan }}
      {% endfor %}
      {% endif %}

      Health Status:
      {{ 'PASS' if (igmp_enabled_vlans is defined and igmp_enabled_vlans |
          int > 0) or (igmp_active_interfaces is defined and
          igmp_active_interfaces | int > 0) else 'CHECK' }}

- name: Store IGMP validation baseline
  ansible.builtin.copy:
    content: |
      # IGMP Validation Baseline - {{
        lookup('pipe', 'date -u +%Y-%m-%dT%H:%M:%SZ') }}
      # Generated during firmware upgrade validation

      IGMP_Snooping_Enabled_VLANs: >
        {{ igmp_enabled_vlans if igmp_enabled_vlans is defined else 0 }}
      IGMP_Total_VLANs: >
        {{ igmp_total_vlans if igmp_total_vlans is defined else 0 }}
      IGMP_Active_Interfaces: >
        {{ igmp_active_interfaces if igmp_active_interfaces is defined else 0 }}
      Total_IGMP_Groups: >
        {{ total_igmp_groups if total_igmp_groups is defined else 0 }}
      Active_Queriers: >
        {{ igmp_queriers | length if igmp_queriers is defined else 0 }}

      {% if igmp_interfaces is defined %}
      IGMP_Interface_Details:
      {% for intf in igmp_interfaces %}
        - Interface: {{ intf.interface }}
          Version: {{ intf.version }}
          Querier: {{ intf.querier }}
      {% endfor %}
      {% endif %}

      {% if igmp_active_groups is defined %}
      Active_IGMP_Groups:
      {% for group in igmp_active_groups %}
        - Group: {{ group.group }}
          Interface: {{ group.interface }}
          Mode: {{ group.mode }}
          Uptime: {{ group.uptime }}
      {% endfor %}
      {% endif %}

      {% if igmp_snooping_active_groups is defined %}
      IGMP_Snooping_Groups:
      {% for group in igmp_snooping_active_groups %}
        - Group: {{ group.group }}
          VLAN: {{ group.vlan }}
          Ports: {{ group.ports }}
      {% endfor %}
      {% endif %}

      {% if igmp_snooping_vlans is defined %}
      IGMP_Snooping_VLAN_Status:
      {% for vlan in igmp_snooping_vlans %}
        - VLAN: {{ vlan.vlan }}
          Enabled: {{ vlan.enabled }}
      {% endfor %}
      {% endif %}

      Validation_Status:
      {{ 'PASS' if (igmp_enabled_vlans is defined and igmp_enabled_vlans |
          int > 0) or (igmp_active_interfaces is defined and
          igmp_active_interfaces | int > 0) else 'CHECK' }}
      Timestamp: {{ lookup('pipe', 'date -u +%Y-%m-%dT%H:%M:%SZ') }}
    dest: >-
      /tmp/igmp_validation_{{ inventory_hostname }}_{{ ansible_play_batch |
        hash('md5') }}.txt
    mode: "0644"
  delegate_to: localhost
  when: not ansible_check_mode
