---
# FortiOS Upgrade Role - Main Tasks
# Handles Fortinet firewall upgrades with HA cluster support

- name: Initialize FortiOS upgrade variables
  set_fact:
    fortios_upgrade_state:
      device: "{{ inventory_hostname }}"
      current_version: ""
      target_version: "{{ target_firmware_version }}"
      ha_mode: "standalone"
      ha_role: "master"
      cluster_member: ""
      license_status: "unknown"
      vdom_mode: false
      
- name: Gather FortiOS device facts
  fortinet.fortios.fortios_monitor_fact:
    vdom: "root"
    selector: "system_status"
  register: fortios_facts
  
- name: Parse device information
  set_fact:
    fortios_upgrade_state: "{{ fortios_upgrade_state | combine({
      'current_version': fortios_facts.meta.results.version,
      'ha_mode': fortios_facts.meta.results.ha_mode,
      'ha_role': fortios_facts.meta.results.ha_group_name | default('standalone'),
      'vdom_mode': fortios_facts.meta.results.vdom_mode == 'enable'
    }) }}"
    
- name: Check HA cluster configuration
  include_tasks: ha-coordination.yml
  when: fortios_upgrade_state.ha_mode != "standalone"
  
- name: Validate FortiCare license
  include_tasks: license-validation.yml
  
- name: Display upgrade plan
  debug:
    msg: |
      FortiOS Upgrade Plan for {{ inventory_hostname }}:
      Current Version: {{ fortios_upgrade_state.current_version }}
      Target Version: {{ fortios_upgrade_state.target_version }}
      HA Mode: {{ fortios_upgrade_state.ha_mode }}
      HA Role: {{ fortios_upgrade_state.ha_role }}
      VDOM Mode: {{ fortios_upgrade_state.vdom_mode }}
      License: {{ fortios_upgrade_state.license_status }}
      
- name: Validate upgrade path
  assert:
    that:
      - fortios_upgrade_state.current_version != fortios_upgrade_state.target_version
      - fortios_upgrade_state.target_version is match("^[0-9]+\\.[0-9]+\\.[0-9]+")
      - fortios_upgrade_state.license_status == "valid"
    fail_msg: "Invalid upgrade path, version format, or license issue"
    
- name: Execute upgrade based on HA mode
  include_tasks: "{{ 'ha-cluster-upgrade.yml' if fortios_upgrade_state.ha_mode != 'standalone' else 'standalone-upgrade.yml' }}"