---
# Image Loading for Metamako MOS Devices
# Secure server-initiated transfers for ultra-low latency hardware
# SECURITY: Uses server-initiated PUSH transfers (not device-initiated PULL)

- name: Check current storage usage
  ansible.netcommon.cli_command:
    command: show system storage
  changed_when: false
  register: storage_status
- name: Verify sufficient space
  ansible.builtin.assert:
    that:
      - "'available' in storage_status.stdout | lower"
    fail_msg: Insufficient storage space for image loading
- name: Verify upgrade server connectivity (from server side)
  ansible.builtin.wait_for:
    host: '{{ ansible_host }}'
    port: 22
    timeout: 10
  delegate_to: localhost
  vars:
    ansible_connection: local
- name: Set optimal transfer parameters
  ansible.netcommon.cli_command:
    ansible.builtin.command: system transfer-mode optimized
  register: transfer_mode_result
  failed_when: false

- name: Log transfer mode setting failures
  ansible.builtin.debug:
    msg: "Warning: Failed to set optimal transfer parameters: {{ transfer_mode_result.msg | default('Unknown error') }}"
  when:
    - transfer_mode_result is defined
    - transfer_mode_result.failed is defined
    - transfer_mode_result.failed | bool

- name: Push firmware image from server to device (SCP)
  ansible.builtin.command:
    cmd: >
      'scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ ''-i
      '' + ansible_ssh_private_key_file
        if ansible_ssh_private_key_file is defined
      else '''' }} "{{ local_image_path }}" "{{
        ansible_user }}@{{ ansible_host }}:/flash/{{
      target_image_filename }}"

      '
    timeout: 3600
  delegate_to: localhost
  register: scp_push_result
  vars:
    ansible_connection: local
- name: Alternative - Use SFTP for secure transfer
  ansible.builtin.command:
    cmd: >
      'sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ ''-i
      '' + ansible_ssh_private_key_file
        if ansible_ssh_private_key_file is defined
      else '''' }} {{ ansible_user }}@{{
        ansible_host }} <<< $''put {{ local_image_path
      }} /flash/{{ target_image_filename }}''

      '
    timeout: 3600
  delegate_to: localhost
  when: scp_push_result is failed
  register: sftp_push_result
  vars:
    ansible_connection: local
- name: Verify download completion
  ansible.netcommon.cli_command:
    command: show image {{ target_image_filename }}
  changed_when: false
  register: image_verification
- name: Validate image integrity
  ansible.builtin.assert:
    that:
      - "'valid' in image_verification.stdout | lower"
      - target_image_filename in image_verification.stdout
    fail_msg: Image download or validation failed
- name: Stage image for installation
  ansible.netcommon.cli_command:
    command: image stage {{ target_image_filename }}
  changed_when: false
  register: staging_result
- name: Verify staging success
  ansible.netcommon.cli_command:
    command: show image staged
  changed_when: false
  register: staged_verification
- name: Confirm image is staged
  ansible.builtin.assert:
    that:
      - target_image_filename in staged_verification.stdout
    fail_msg: Image staging failed
- name: Calculate image checksum
  ansible.netcommon.cli_command:
    command: image checksum {{ target_image_filename }}
  changed_when: false
  register: image_checksum
  when: expected_checksum is defined
- name: Verify checksum matches expected
  ansible.builtin.assert:
    that:
      - expected_checksum in image_checksum.stdout
    fail_msg: Image checksum validation failed
  when: expected_checksum is defined
- name: Log loading completion
  ansible.builtin.debug:
    msg: 'Secure Metamako Image Loading Completed:

      - Local Source: {{ local_image_path }}

      - Remote Destination:
        {{ ansible_host }}:/flash/{{ target_image_filename }}

      - Transfer Method: {{ ''SCP
        (server-initiated PUSH)'' if scp_push_result is
      succeeded else ''SFTP (server-initiated PUSH)'' }}

      - Size: {{ image_verification.stdout |
        regex_search(''Size: ([\\d]+)'', ''\\1'')
      | first | default(''Unknown'') }} bytes

      - Checksum: {{ ''Verified'' if
        expected_checksum is defined else ''Skipped''
      }}

      - Security: Server-initiated PUSH transfer

      - >
        Status: >
          {{ ''Staged and Ready'' if target_image_filename
            in staged_verification.stdout
      else ''Check Required'' }}'
