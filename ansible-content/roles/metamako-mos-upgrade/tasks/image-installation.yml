---
# Image Installation for Metamako MOS Devices
# Ultra-low latency upgrade execution

- name: Pre-installation checks
  block:
    - name: Verify staged image
      ansible.netcommon.cli_command:

        command: show image staged

      changed_when: false
      register: staged_check

    - name: Confirm image is ready
      ansible.builtin.assert:
        that:
          - target_image_filename in staged_check.stdout
        fail_msg: "Required image not staged for installation"

    - name: Final system state check
      ansible.netcommon.cli_command:

        command: show system status

      changed_when: false
      register: final_system_check

- name: Metamako installation process
  block:
    - name: Set installation mode
      ansible.netcommon.cli_command:
        command: system install-mode fast-reboot
      failed_when: false

    - name: Execute image installation
      ansible.netcommon.cli_command:
        command: "image install {{ target_image_filename }} activate"
        timeout: 1800
      changed_when: false
      register: install_result

    - name: Monitor installation progress
      ansible.netcommon.cli_command:

        command: show install progress

      changed_when: false
      register: install_progress
      until: >
        "'complete' in install_progress.stdout | lower
          or 'failed' in install_progress.stdout | lower"
      retries: 30
      delay: 10
      failed_when: "'failed' in install_progress.stdout | lower"

- name: Post-installation validation
  block:
    - name: Verify new firmware is active
      ansible.netcommon.cli_command:

        command: show version

      changed_when: false
      register: post_install_version

    - name: Confirm target version
      ansible.builtin.assert:
        that:
          - metamako_upgrade_state.target_version in post_install_version.stdout
        fail_msg: "Installation completed but target version not active"

    - name: Check system health
      ansible.netcommon.cli_command:

        command: show system health

      changed_when: false
      register: system_health_check

    - name: Validate system is healthy
      ansible.builtin.assert:
        that:
          - >
            "'healthy' in system_health_check.stdout | lower
              or 'ok' in system_health_check.stdout | lower"
        fail_msg: "System health check failed after installation"

- name: Specialized component validation
  block:
    - name: Re-check Metawatch status (if equipped)
      ansible.netcommon.cli_command:

        command: show metawatch status

      changed_when: false
      register: post_metawatch_status
      failed_when: false
      when: metamako_upgrade_state.metawatch_enabled

    - name: Re-check Metamux status (if equipped)
      ansible.netcommon.cli_command:

        command: show metamux status

      changed_when: false
      register: post_metamux_status
      failed_when: false
      when: metamako_upgrade_state.metamux_enabled

    - name: Validate component functionality
      ansible.builtin.assert:
        that:
          - >
            "not metamako_upgrade_state.metawatch_enabled or
              'enabled' in post_metawatch_status.stdout | lower"
          - >
            "not metamako_upgrade_state.metamux_enabled or
              'enabled' in post_metamux_status.stdout | lower"
        fail_msg: >
          "Specialized components not functioning correctly after upgrade"

- name: Log installation completion
  ansible.builtin.debug:
    msg: |
      Metamako Installation Completed:
      - Previous Version: {{ metamako_upgrade_state.current_version }}
      - New Version: {{ metamako_upgrade_state.target_version }}
      - System Health: {{ 'OK' if 'healthy' in system_health_check.stdout |
          lower else 'CHECK' }}
      - Metawatch: {{ 'OK' if not metamako_upgrade_state.metawatch_enabled or
          'enabled' in post_metawatch_status.stdout | lower else 'CHECK' }}
      - Metamux: {{ 'OK' if not metamako_upgrade_state.metamux_enabled or
          'enabled' in post_metamux_status.stdout | lower else 'CHECK' }}
