---
# Cisco NX-OS Storage Assessment

- name: Get bootflash directory information
  cisco.nxos.nxos_command:
    commands:
      - "dir bootflash:"
  register: nxos_bootflash_dir
  when: not ansible_check_mode

- name: Get free space information
  cisco.nxos.nxos_command:
    commands:
      - "dir bootflash: | include free"
  register: nxos_free_space
  when: not ansible_check_mode

- name: Simulate storage data for check mode
  ansible.builtin.set_fact:
    nxos_bootflash_dir:
      stdout:
        - "       4096    Oct 01 10:00:00 2025  .bootflash/\n    1048576    Oct 01 09:00:00 2025  test-image.bin"
      rc: 0
    nxos_free_space:
      stdout:
        - "2097152 bytes total\n1048576 bytes free"
      rc: 0
  when: ansible_check_mode

- name: Parse bootflash directory listing
  ansible.builtin.set_fact:
    nxos_files: >-
      {{ nxos_bootflash_dir.stdout[0] |
        regex_findall('\\s+(\\d+)\\s+\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+\\s+(.+)') }}
    nxos_images: >-
      {{ nxos_bootflash_dir.stdout[0] |
        regex_findall(
        '\\s+\\d+\\s+\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+\\s+(.+\\.bin)') }}

- name: Parse free space information
  ansible.builtin.set_fact:
    nxos_total_bytes: >
      "{{ nxos_free_space.stdout[0] | regex_search('(\\d+)
        bytes total', '\\1') | first | int }}"
    nxos_free_bytes: >
      "{{ nxos_free_space.stdout[0] | regex_search('(\\d+)
        bytes free', '\\1') | first | int }}"

- name: Calculate storage metrics
  ansible.builtin.set_fact:
    storage_info: >-
      {{ storage_info | combine({
        'total_space_gb': (nxos_total_bytes / 1024 / 1024 / 1024) | round(2),
        'free_space_gb': (nxos_free_bytes / 1024 / 1024 / 1024) | round(2),
        'images_found': nxos_images,
        'cleanup_candidates': nxos_images
      }) }}
