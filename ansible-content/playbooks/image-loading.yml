---
# Image Loading Playbook
# Downloads and stages firmware images on network devices
# Business hours safe - does not disrupt operations

- name: Firmware Image Loading
  hosts: "{{ target_hosts | default('all') }}"
  gather_facts: false
  connection: network_cli
  vars:
    firmware_source_path: "{{ firmware_base_path }}/{{ ansible_network_os }}"
    device_storage_path: "/var/lib/firmware"
    integrity_check_required: true
    cleanup_old_images: true
  tasks:
    - name: Validate firmware file exists locally
      ansible.builtin.stat:
        path: "{{ firmware_source_path }}/{{ firmware_version }}"
      register: firmware_file
      delegate_to: localhost
    - name: Fail if firmware file not found
      ansible.builtin.fail:
        msg: >
          Firmware file not found:
          {{ firmware_source_path }}/{{ firmware_version }}
      when: not firmware_file.stat.exists

    - name: Check device storage capacity
      ansible.builtin.include_tasks:
        ../roles/space-management/tasks/space-check.yml
      vars:
        required_space_gb: "{{ firmware_size_gb | default(2) }}"

    - name: Platform-specific image loading
      block:
        # Cisco NX-OS Image Loading
        - name: Load Cisco NX-OS image
          ansible.builtin.include_role:
            name: cisco-nxos-upgrade
            tasks_from: image-loading
          when: ansible_network_os == 'nxos'

        # Cisco IOS-XE Image Loading
        - name: Load Cisco IOS-XE image
          ansible.builtin.include_role:
            name: cisco-iosxe-upgrade
            tasks_from: image-loading
          when: ansible_network_os == 'ios'

        # Metamako MOS Image Loading
        - name: Load Metamako MOS image
          ansible.builtin.include_role:
            name: metamako-mos-upgrade
            tasks_from: image-loading
          when: ansible_network_os == 'mos'

        # Opengear Image Loading
        - name: Load Opengear image
          ansible.builtin.include_role:
            name: opengear-upgrade
            tasks_from: image-loading
          when: ansible_network_os == 'opengear'

        # FortiOS Image Loading
        - name: Load FortiOS image
          ansible.builtin.include_role:
            name: fortios-upgrade
            tasks_from: image-loading
          when: ansible_network_os == 'fortios'

    - name: Verify image integrity
      ansible.builtin.include_tasks:
        ../roles/image-validation/tasks/hash-verification.yml

    - name: Record image loading completion
      ansible.builtin.include_tasks: ../roles/common/tasks/metrics-export.yml
      vars:
        metric_type: "image_loading"
        metric_data:
          device_id: "{{ inventory_hostname }}"
          firmware_version: "{{ firmware_version }}"
          platform: "{{ ansible_network_os }}"
          status: "success"
          timestamp: "{{ ansible_date_time.iso8601 }}"

    - name: Display loading results
      ansible.builtin.debug:
        msg:
          - "=== Image Loading Complete ==="
          - "Device: {{ inventory_hostname }}"
          - "Platform: {{ ansible_network_os }}"
          - "Firmware: {{ firmware_version }}"
          - "Status: LOADED"
          - "=============================="
