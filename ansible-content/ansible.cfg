# Ansible Configuration for Network Device Upgrade System
# Optimized for single server deployment and network automation

[defaults]
# Basic settings
inventory = inventory/hosts.yml
host_key_checking = False
timeout = 30
forks = 50
gathering = explicit
fact_caching = memory
fact_caching_timeout = 86400

# Paths
roles_path = roles
collections_path = collections
library = library
filter_plugins = filter_plugins
callback_plugins = callback_plugins

# Logging
log_path = /tmp/ansible.log
display_skipped_hosts = False
display_ok_hosts = True
deprecation_warnings = False

# Performance optimization
pipelining = True
control_path_dir = /tmp/ansible-control-%(directory)s
host_key_auto_add = True

# Retry settings
retry_files_enabled = True
retry_files_save_path = /tmp/ansible-retry

# Output formatting
stdout_callback = default
bin_ansible_callbacks = True

[inventory]
# Inventory settings
enable_plugins = auto
cache = True
cache_plugin = memory
cache_timeout = 3600

[privilege_escalation]
# Privilege escalation for network devices
become = True
become_method = enable
become_ask_pass = False

[connection]
# Network device connections
host_key_checking = False
ssh_args = -o ControlMaster=auto -o ControlPersist=300s -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no

[ssh_connection]
# SSH connection optimization
ssh_args = -o ControlMaster=auto -o ControlPersist=300s -o PreferredAuthentications=publickey -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
pipelining = True
control_path = /tmp/ansible-ssh-%%h-%%p-%%r
control_path_dir = /tmp/ansible-control-%(directory)s

[persistent_connection]
# Persistent connections for network devices
connect_timeout = 30
command_timeout = 300
connect_retry_timeout = 15

[netconf_connection]
# NETCONF settings
host_key_checking = False
look_for_keys = True

[galaxy]
# Ansible Galaxy settings
server_list = automation_hub,galaxy
server = https://galaxy.ansible.com

[automation_hub]
url = https://console.redhat.com/api/automation-hub/
auth_url = https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token