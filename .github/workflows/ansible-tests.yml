name: Ansible Tests
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint-and-syntax:
    name: Lint and Syntax Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]  # Removed 3.8 - not compatible with Ansible 8+
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install Ansible and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install 'ansible>=9.0.0,<10.0.0'
        pip install yamllint ansible-lint
        
    - name: Install Ansible collections
      run: |
        ansible-galaxy collection install -r ansible-content/collections/requirements.yml --force --ignore-certs
        
    - name: Run YAML syntax validation
      run: |
        python3 tests/validation-scripts/yaml-validator.py --ansible-only
        
    - name: Run yamllint
      run: |
        yamllint ansible-content/
      continue-on-error: true
      
    - name: Run ansible-lint
      run: |
        ansible-lint ansible-content/playbooks/ ansible-content/roles/
      continue-on-error: true
      
    - name: Test playbook syntax
      run: |
        ansible-playbook --syntax-check ansible-content/playbooks/main-upgrade-workflow.yml
        
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint-and-syntax
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Ansible
      run: |
        pip install 'ansible>=9.0.0,<10.0.0'
        ansible-galaxy collection install -r ansible-content/collections/requirements.yml --force --ignore-certs
        
    - name: Run variable validation tests
      run: |
        ansible-playbook tests/unit-tests/variable-validation.yml
        
    - name: Run template rendering tests  
      run: |
        ansible-playbook tests/unit-tests/template-rendering.yml
        
    - name: Run workflow logic tests
      run: |
        ansible-playbook tests/unit-tests/workflow-logic.yml
        
    - name: Run error handling tests
      run: |
        ansible-playbook tests/unit-tests/error-handling.yml
        
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Ansible
      run: |
        pip install 'ansible>=9.0.0,<10.0.0'
        ansible-galaxy collection install -r ansible-content/collections/requirements.yml --force --ignore-certs
        
    - name: Run check mode tests
      run: |
        ansible-playbook -i tests/mock-inventories/all-platforms.yml \
          --check --diff tests/integration-tests/check-mode-tests.yml
          
    - name: Test main workflow with mock inventory
      run: |
        ansible-playbook -i tests/mock-inventories/single-platform.yml \
          --check --diff -e "upgrade_phase=loading" \
          ansible-content/playbooks/main-upgrade-workflow.yml
          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan for secrets
      run: |
        # Check for potential secrets in code
        grep -r "password\|secret\|key\|token" ansible-content/ --include="*.yml" --include="*.yaml" || true
        echo "Security scan completed"
        
    - name: Check for hardcoded IPs
      run: |
        # Check for hardcoded IP addresses (except test/mock IPs)
        grep -r "192\.168\|10\.\|172\." ansible-content/ --include="*.yml" --include="*.yaml" | grep -v "127.0.0" || true
        echo "IP address scan completed"