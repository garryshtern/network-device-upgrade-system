---
name: Cleanup Artifacts

# Cancel in-progress runs when a new workflow is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      confirm_deletion:
        description: 'Type "DELETE" to confirm artifact deletion'
        required: true
        type: string
      max_artifacts:
        description: 'Maximum number of artifacts to delete (safety limit)'
        required: false
        default: '100'
        type: string
  schedule:
    # Run automatic cleanup monthly on the first day at 3 AM UTC
    - cron: '0 3 1 * *'

permissions:
  actions: write
  contents: read

jobs:
  cleanup-artifacts:
    name: Delete All Workflow Artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Validate confirmation
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            echo "‚úÖ Scheduled cleanup run - auto-approved"
          elif [ "${{ github.event.inputs.confirm_deletion }}" != "DELETE" ]; then
            echo "‚ùå Confirmation failed. You must type 'DELETE' to proceed."
            exit 1
          else
            echo "‚úÖ Manual confirmation validated"
          fi

      - name: Delete artifacts
        run: |
          echo "üóëÔ∏è  Starting artifact cleanup..."

          # Fetch all artifacts with pagination
          echo "üìã Fetching artifact list..."
          > /tmp/artifact_ids.txt
          page=1
          while true; do
            echo "üìÑ Fetching page $page..."
            response=$(gh api "repos/${{ github.repository }}/actions/artifacts?per_page=100&page=$page")
            artifacts=$(echo "$response" | jq -r '.artifacts[] | .id')

            if [ -z "$artifacts" ]; then
              echo "üìÑ No more artifacts found on page $page"
              break
            fi

            echo "$artifacts" >> /tmp/artifact_ids.txt
            page=$((page + 1))

            # Add small delay to avoid rate limiting
            sleep 0.1
          done

          if [ ! -s /tmp/artifact_ids.txt ]; then
            echo "üì≠ No artifacts found to delete"
            exit 0
          fi

          TOTAL_ARTIFACTS=$(wc -l < /tmp/artifact_ids.txt)
          MAX_LIMIT=${{ github.event.inputs.max_artifacts || '50' }}

          if [ "$TOTAL_ARTIFACTS" -gt "$MAX_LIMIT" ]; then
            echo "‚ö†Ô∏è  Found $TOTAL_ARTIFACTS artifacts, but limit is $MAX_LIMIT"
            echo "Truncating list to first $MAX_LIMIT artifacts for safety"
            head -n "$MAX_LIMIT" /tmp/artifact_ids.txt > /tmp/artifact_ids_limited.txt
            mv /tmp/artifact_ids_limited.txt /tmp/artifact_ids.txt
            TOTAL_ARTIFACTS=$MAX_LIMIT
          fi

          echo "üì¶ Found $TOTAL_ARTIFACTS artifacts to delete"

          # Delete each artifact
          COUNT=0
          DELETED=0
          FAILED=0

          while read -r artifact_id; do
            if [ -n "$artifact_id" ]; then
              COUNT=$((COUNT + 1))
              echo -n "üóëÔ∏è  Deleting artifact $artifact_id ($COUNT/$TOTAL_ARTIFACTS)... "

              if gh api --method DELETE "repos/${{ github.repository }}/actions/artifacts/$artifact_id" --silent; then
                echo "‚úÖ Deleted"
                DELETED=$((DELETED + 1))
              else
                echo "‚ùå Failed"
                FAILED=$((FAILED + 1))
              fi
            fi
          done < /tmp/artifact_ids.txt

          echo ""
          echo "üéâ Artifact cleanup completed!"
          echo "   Total processed: $COUNT"
          echo "   Successfully deleted: $DELETED"
          echo "   Failed: $FAILED"

          # Clean up temp files
          rm -f /tmp/artifact_ids.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "### üßπ Artifact Cleanup Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ **Cleanup completed successfully**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All workflow artifacts have been removed from the repository." >> $GITHUB_STEP_SUMMARY
          echo "Future workflow runs will create fresh artifacts as needed." >> $GITHUB_STEP_SUMMARY