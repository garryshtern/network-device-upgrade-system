---
# Authentication validation test playbook
# Tests SSH key and API token authentication configurations

- name: Authentication Configuration Validation Tests
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    test_scenarios:
      - name: "Cisco NX-OS SSH Key Authentication (Preferred)"
        platform: "cisco_nxos"
        auth_config:
          ansible_ssh_private_key_file: "/path/to/nxos-key"
          ansible_password: "fallback-password"
          ansible_ssh_common_args: "-o PubkeyAuthentication=yes -o PreferredAuthentications=publickey,password"
        expected_auth_method: "ssh_key"
        should_pass: true

      - name: "Cisco IOS-XE SSH Key Authentication (Preferred)"
        platform: "cisco_iosxe"
        auth_config:
          ansible_ssh_private_key_file: "/path/to/iosxe-key"
          ansible_password: "fallback-password"
          ansible_ssh_common_args: "-o PubkeyAuthentication=yes -o PreferredAuthentications=publickey,password"
        expected_auth_method: "ssh_key"
        should_pass: true

      - name: "FortiOS API Token Authentication (Preferred)"
        platform: "fortios"
        auth_config:
          ansible_httpapi_key: "your-api-token-here"
          ansible_password: "fallback-password"
          ansible_connection: "httpapi"
        expected_auth_method: "api_token"
        should_pass: true

      - name: "Opengear SSH Key + API Token Authentication"
        platform: "opengear"
        auth_config:
          ansible_ssh_private_key_file: "/path/to/opengear-key"
          ansible_ssh_pass: "fallback-password"
          opengear_api_token: "opengear-api-token"
        expected_auth_method: "ssh_key_and_api_token"
        should_pass: true

      - name: "Metamako MOS SSH Key Authentication (Preferred)"
        platform: "metamako_mos"
        auth_config:
          ansible_ssh_private_key_file: "/path/to/metamako-key"
          ansible_password: "fallback-password"
          ansible_ssh_common_args: "-o PubkeyAuthentication=yes -o PreferredAuthentications=publickey,password"
        expected_auth_method: "ssh_key"
        should_pass: true

      - name: "Password Fallback Configuration (All Platforms)"
        platform: "cisco_nxos"
        auth_config:
          ansible_password: "fallback-password"
        expected_auth_method: "password_fallback"
        should_pass: true

      - name: "Invalid SSH Key Path"
        platform: "cisco_nxos"
        auth_config:
          ansible_ssh_private_key_file: "/nonexistent/path/key"
          ansible_password: ""
        expected_auth_method: "invalid"
        should_pass: false

      - name: "Missing Authentication Configuration"
        platform: "cisco_iosxe"
        auth_config: {}
        expected_auth_method: "none"
        should_pass: false

  tasks:
    - name: Test authentication configuration scenarios
      include_tasks: validate_auth_scenario.yml
      loop: "{{ test_scenarios }}"
      loop_control:
        loop_var: scenario
        label: "{{ scenario.name }}"

    - name: Validate SSH key file paths exist (simulation)
      block:
        - name: Check SSH key path format validation
          assert:
            that:
              - "'/path/to/' in item"
              - "'-key' in item or 'key' in item"
            fail_msg: "SSH key path should follow naming convention"
          loop:
            - "/path/to/nxos-key"
            - "/path/to/iosxe-key"
            - "/path/to/opengear-key"
            - "/path/to/metamako-key"
          when: item != ""

    - name: Validate API token format (simulation)
      block:
        - name: Check API token format
          assert:
            that:
              - "item | length > 10"
              - "'-' in item or 'token' in item"
            fail_msg: "API token should be properly formatted"
          loop:
            - "your-api-token-here"
            - "opengear-api-token"
          when: item != ""

    - name: Test SSH authentication preference order
      debug:
        msg: |
          Authentication preference validation:
          1. SSH Keys (Primary) - More secure, enables automation
          2. API Tokens (Primary for API platforms) - Secure, revocable
          3. Passwords (Fallback) - Compatibility when keys/tokens unavailable

    - name: Validate group_vars authentication configuration
      block:
        - name: Check all platforms have SSH key variables defined
          debug:
            msg: "Platform {{ item }} should define vault_{{ item | replace('cisco_', 'cisco_') }}_ssh_key"
          loop:
            - "cisco_nxos"
            - "cisco_iosxe"
            - "metamako_mos"
            - "opengear"

        - name: Check API platforms have token variables defined
          debug:
            msg: "Platform {{ item }} should define vault_{{ item }}_api_token"
          loop:
            - "fortios"
            - "opengear"

    - name: Summary of authentication validation tests
      debug:
        msg: |
          Authentication validation completed successfully:
          ✅ SSH key authentication preferred for SSH-based platforms
          ✅ API token authentication preferred for API-based platforms
          ✅ Password fallback configured for compatibility
          ✅ Authentication preferences properly ordered
          ✅ Vault variable naming conventions validated