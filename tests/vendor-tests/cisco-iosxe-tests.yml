---
# Cisco IOS-XE Vendor-Specific Tests
# Tests IOS-XE role functionality, install mode vs bundle mode, and validation capabilities

- name: Cisco IOS-XE Platform Tests
  hosts: localhost
  gather_facts: false
  vars:
    role_path: "{{ playbook_dir }}/../../ansible-content/roles/cisco-iosxe-upgrade"
    test_scenarios:
      - name: "Install Mode Capable Device"
        device_vars:
          platform_type: "cisco_iosxe"
          device_model: "ISR4431"
          firmware_version: "16.12.07"
          target_version: "17.06.04"
          install_mode: true
          boot_mode: "install"
        expected_results:
          install_mode_supported: true
          upgrade_method: "install_mode_upgrade"
          
      - name: "Bundle Mode Device"
        device_vars:
          platform_type: "cisco_iosxe"
          device_model: "C9300-48U"
          firmware_version: "16.12.08"
          target_version: "17.06.04"
          install_mode: false
          boot_mode: "bundle"
        expected_results:
          install_mode_supported: false
          upgrade_method: "bundle_mode_upgrade"
          
      - name: "Legacy Device (Bundle Only)"
        device_vars:
          platform_type: "cisco_iosxe"
          device_model: "C3850-48T"
          firmware_version: "16.09.08"
          target_version: "16.12.09"
          install_mode: false
          boot_mode: "bundle"
        expected_results:
          install_mode_supported: false
          upgrade_method: "bundle_mode_upgrade"

  tasks:
    - name: Validate IOS-XE role structure
      stat:
        path: "{{ role_path }}"
      register: iosxe_role_check
      
    - name: Assert IOS-XE role exists
      assert:
        that:
          - iosxe_role_check.stat.exists
          - iosxe_role_check.stat.isdir
        fail_msg: "Cisco IOS-XE role directory not found"
        success_msg: "✓ Cisco IOS-XE role structure validated"

    - name: Validate required IOS-XE role files
      stat:
        path: "{{ role_path }}/{{ item }}"
      register: iosxe_file_checks
      loop:
        - "tasks/main.yml"
        - "tasks/image-loading.yml"
        - "tasks/image-installation.yml"
        - "tasks/install-mode.yml"
        - "tasks/bundle-mode.yml"
        - "tasks/check-install-mode.yml"
        - "tasks/validation.yml"
        - "tasks/ipsec-validation.yml"
        - "tasks/optics-validation.yml"
        - "vars/main.yml"
        
    - name: Assert all required IOS-XE files exist
      assert:
        that:
          - item.stat.exists
        fail_msg: "Required IOS-XE file missing: {{ item.item }}"
        success_msg: "✓ Required IOS-XE file found: {{ item.item }}"
      loop: "{{ iosxe_file_checks.results }}"

    - name: Test IOS-XE platform detection logic
      set_fact:
        test_platform_detection: "{{ test_scenarios }}"
        
    - name: Validate IOS-XE install mode detection
      include_tasks: validate_iosxe_scenario.yml
      loop: "{{ test_scenarios }}"
      loop_control:
        loop_var: iosxe_scenario
        label: "{{ iosxe_scenario.name }}"

    - name: Test IOS-XE validation capabilities
      block:
        - name: Validate IPSec validation task exists
          stat:
            path: "{{ role_path }}/tasks/ipsec-validation.yml"
          register: ipsec_validation_check
          
        - name: Assert IPSec validation exists
          assert:
            that:
              - ipsec_validation_check.stat.exists
            fail_msg: "IPSec validation task missing"
            success_msg: "✓ IPSec validation capability confirmed"
            
        - name: Validate optics validation task exists
          stat:
            path: "{{ role_path }}/tasks/optics-validation.yml"
          register: optics_validation_check
          
        - name: Assert optics validation exists
          assert:
            that:
              - optics_validation_check.stat.exists
            fail_msg: "Optics validation task missing"
            success_msg: "✓ Optics validation capability confirmed"

    - name: Test IOS-XE upgrade workflow compatibility
      block:
        - name: Validate IOS-XE template rendering
          template:
            src: "{{ role_path }}/templates/{{ item }}"
            dest: "/tmp/test_{{ item | basename }}"
          vars:
            ansible_host: "127.0.0.1"
            platform_type: "cisco_iosxe"
            firmware_version: "16.12.07"
            target_version: "17.06.04"
            install_mode: true
          loop:
            - "boot-config.j2"
          register: template_render_results
          ignore_errors: true
          
        - name: Clean up template test files
          file:
            path: "/tmp/test_{{ item.item | basename }}"
            state: absent
          loop: "{{ template_render_results.results }}"
          when: template_render_results is defined

    - name: IOS-XE platform test summary
      debug:
        msg:
          - "=== Cisco IOS-XE Platform Test Results ==="
          - "✓ Role structure validated"
          - "✓ Required files confirmed"
          - "✓ Install/Bundle mode detection tested"
          - "✓ Validation capabilities confirmed"
          - "✓ Template rendering tested"
          - "✓ IOS-XE platform testing: COMPLETE"