---
# Emergency Rollback Playbook Test Suite
# Tests emergency rollback and recovery functionality
- name: Test Emergency Rollback Playbook
  hosts: localhost
  gather_facts: false
  vars:
    # Test configuration
    test_environment: true
    target_hosts: "localhost"
    rollback_types: ["config", "firmware", "full_system"]
    rollback_triggers: ["manual", "automated", "health_check_failed"]

    # Mock device configuration
    ansible_network_os: "cisco.nxos.nxos"
    device_platform: "cisco_nxos"

    # Test rollback parameters
    rollback_results_path: "/tmp/emergency-rollback-test"
    rollback_timeout_seconds: 300
    expected_rollback_operations:
      - "rollback_prepare"
      - "backup_current_state"
      - "validate_rollback_target"
      - "execute_rollback"
      - "verify_rollback"
      - "cleanup_rollback"

  pre_tasks:
    - name: Setup test environment for emergency rollback
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ rollback_results_path }}"
        - "{{ rollback_results_path }}/{{ inventory_hostname }}"
        - /tmp/emergency-rollback-test/rollbacks
        - /tmp/emergency-rollback-test/backups
        - /tmp/emergency-rollback-test/logs

    - name: Create mock current device configuration
      ansible.builtin.copy:
        content: |
          # Mock current configuration for rollback testing
          version 9.3(7)
          hostname test-device-01

          # Current problematic configuration
          boot nxos bootflash:nxos.9.3.7.bin
          feature interface-vlan
          feature hsrp
          feature lacp

          # Management interface with issue
          interface mgmt0
           ip address 192.168.1.100/24
           description MGMT-INTERFACE-BROKEN
           no shutdown

          # Data interfaces with problems
          interface Ethernet1/1
           description UPLINK-TO-CORE-BROKEN
           switchport mode trunk
           shutdown

          interface Ethernet1/2
           description ACCESS-PORT-ISSUE
           switchport mode access
           switchport access vlan 999
           shutdown

          # Broken VLAN configuration
          vlan 999
           name BROKEN-VLAN
           state suspend

          # Invalid routing configuration
          ip route 0.0.0.0/0 192.168.999.1
        dest: "{{ rollback_results_path }}/current-config.cfg"
        mode: '0644'

    - name: Create mock rollback target configuration
      ansible.builtin.copy:
        content: |
          # Mock rollback target configuration (known good state)
          version 9.3(6)
          hostname test-device-01

          # Known good configuration
          boot nxos bootflash:nxos.9.3.6.bin
          feature interface-vlan
          feature hsrp

          # Management interface working
          interface mgmt0
           ip address 192.168.1.100/24
           description MGMT-INTERFACE-WORKING
           no shutdown

          # Data interfaces working
          interface Ethernet1/1
           description UPLINK-TO-CORE-WORKING
           switchport mode trunk
           no shutdown

          interface Ethernet1/2
           description ACCESS-PORT-WORKING
           switchport mode access
           switchport access vlan 100
           no shutdown

          # Working VLAN configuration
          vlan 100
           name PRODUCTION
           state active

          # Valid routing configuration
          ip route 0.0.0.0/0 192.168.1.1
        dest: "{{ rollback_results_path }}/rollback-target-config.cfg"
        mode: '0644'

    - name: Create rollback policy configuration
      ansible.builtin.copy:
        content: |
          # Emergency Rollback Policy
          rollback_policy:
            max_rollback_attempts: 3
            rollback_timeout_seconds: 300
            health_check_required: true
            backup_before_rollback: true

          rollback_triggers:
            health_check_failure:
              enabled: true
              threshold: 3
              consecutive_failures: true
            manual_trigger:
              enabled: true
              authorization_required: true
            automated_trigger:
              enabled: true
              conditions:
                - "connectivity_loss"
                - "configuration_corruption"

          validation_checks:
            pre_rollback:
              - "device_reachability"
              - "backup_availability"
              - "rollback_target_validation"
            post_rollback:
              - "device_connectivity"
              - "configuration_integrity"
              - "service_availability"
        dest: "{{ rollback_results_path }}/rollback-policy.yml"
        mode: '0644'

  tasks:
    - name: Test emergency rollback initialization
      ansible.builtin.set_fact:
        rollback_state:
          device_name: "{{ inventory_hostname }}"
          platform: "{{ ansible_network_os }}"
          rollback_timestamp: >-
            {{ ansible_date_time.epoch | default('1695340800') }}
          rollback_types: "{{ rollback_types }}"
          rollback_status: "in_progress"
          rollback_trigger: "health_check_failed"

    - name: Validate rollback state initialization
      ansible.builtin.assert:
        that:
          - rollback_state is defined
          - rollback_state.device_name == inventory_hostname
          - rollback_state.platform is defined
          - rollback_state.rollback_timestamp is defined
          - rollback_state.rollback_types | length > 0
          - rollback_state.rollback_trigger in rollback_triggers
        fail_msg: "Emergency rollback initialization failed"

    - name: Test emergency rollback operations simulation
      ansible.builtin.set_fact:
        rollback_operations_results: |
          {%- set results = [] -%}
          {%- for rollback_type in rollback_types -%}
            {%- for operation in expected_rollback_operations -%}
              {%- set result = {
                  'rollback_type': rollback_type,
                  'operation': operation,
                  'status': 'SUCCESS',
                  'duration_seconds': (range(5, 60) | random),
                  'attempt_number': 1,
                  'rollback_size_bytes': (range(2048, 20480) | random),
                  'description': 'Mock ' ~ operation ~ ' for ' ~ rollback_type,
                  'validation_result': 'PASSED'
                } -%}
              {%- set _ = results.append(result) -%}
            {%- endfor -%}
          {%- endfor -%}
          {{ results }}

    - name: Validate rollback operations results structure
      ansible.builtin.assert:
        that:
          - item.rollback_type is defined
          - item.operation is defined
          - item.status in ['SUCCESS', 'FAILED', 'RETRY', 'ABORTED']
          - item.duration_seconds is defined
          - item.attempt_number is defined
          - item.validation_result in ['PASSED', 'FAILED', 'PENDING']
        fail_msg: >
          Rollback operation {{ item.operation }} has invalid structure
      loop: "{{ rollback_operations_results }}"

    - name: Test rollback health check simulation
      ansible.builtin.set_fact:
        health_check_results: |
          {%- set results = [] -%}
          {%- set checks = [
              'device_connectivity',
              'interface_status',
              'routing_table',
              'service_availability',
              'configuration_integrity'
            ] -%}
          {%- for check in checks -%}
            {%- set result = {
                'check_name': check,
                'status': 'HEALTHY',
                'response_time_ms': (range(10, 100) | random),
                'description': 'Post-rollback health check for ' ~ check,
                'expected_value': 'OPERATIONAL',
                'actual_value': 'OPERATIONAL',
                'check_timestamp': rollback_state.rollback_timestamp
              } -%}
            {%- set _ = results.append(result) -%}
          {%- endfor -%}
          {{ results }}

    - name: Validate health check results structure
      ansible.builtin.assert:
        that:
          - item.check_name is defined
          - item.status in ['HEALTHY', 'DEGRADED', 'CRITICAL', 'UNKNOWN']
          - item.response_time_ms is defined
          - item.expected_value is defined
          - item.actual_value is defined
        fail_msg: >
          Health check {{ item.check_name }} has invalid structure
      loop: "{{ health_check_results }}"

    - name: Test rollback verification simulation
      ansible.builtin.set_fact:
        rollback_verification_results: |
          {%- set results = [] -%}
          {%- for rollback_type in rollback_types -%}
            {%- set result = {
                'rollback_type': rollback_type,
                'verification_status': 'VERIFIED',
                'configuration_match': 'EXACT',
                'functionality_test': 'PASSED',
                'performance_impact': 'MINIMAL',
                'rollback_success': true,
                'recovery_time_seconds': (range(30, 180) | random),
                'data_integrity': 'INTACT'
              } -%}
            {%- set _ = results.append(result) -%}
          {%- endfor -%}
          {{ results }}

    - name: Test emergency rollback report generation
      ansible.builtin.copy:
        content: |
          {
            "rollback_metadata": {
              "device_name": "{{ rollback_state.device_name }}",
              "platform": "{{ rollback_state.platform }}",
              "rollback_timestamp": "{{ rollback_state.rollback_timestamp }}",
              "rollback_types": {{ rollback_state.rollback_types | to_json }},
              "rollback_trigger": "{{ rollback_state.rollback_trigger }}"
            },
            "rollback_operations": {{ rollback_operations_results | to_json }},
            "health_checks": {{ health_check_results | to_json }},
            "verification_results":
              {{ rollback_verification_results | to_json }},
            "summary": {
              "total_operations": {{ rollback_operations_results | length }},
              "successful_operations": {{
                rollback_operations_results |
                selectattr('status', 'equalto', 'SUCCESS') |
                list | length
              }},
              "failed_operations": {{
                rollback_operations_results |
                selectattr('status', 'equalto', 'FAILED') |
                list | length
              }},
              "total_health_checks": {{ health_check_results | length }},
              "healthy_checks": {{
                health_check_results |
                selectattr('status', 'equalto', 'HEALTHY') |
                list | length
              }},
              "rollback_success_rate": {{
                ((
                  rollback_verification_results |
                  selectattr('rollback_success', 'equalto', true) |
                  list | length
                ) / rollback_verification_results | length * 100) | round(2)
              }},
              "average_recovery_time": {{
                (rollback_verification_results |
                map(attribute='recovery_time_seconds') |
                sum / rollback_verification_results | length) | round(1)
              }}
            }
          }
        dest: >-
          {{ rollback_results_path }}/logs/emergency-rollback-report-{{-
          inventory_hostname }}-{{-
          ansible_date_time.epoch | default('test') }}.json
        mode: '0644'

    - name: Verify rollback report was generated
      ansible.builtin.stat:
        path: "{{ rollback_results_path }}/logs/"
      register: logs_directory

    - name: Find generated rollback reports
      ansible.builtin.find:
        paths: "{{ rollback_results_path }}/logs/"
        patterns: "emergency-rollback-report-*.json"
      register: rollback_reports

    - name: Validate rollback report generation
      ansible.builtin.assert:
        that:
          - logs_directory.stat.exists
          - rollback_reports.files | length > 0
        fail_msg: "Emergency rollback report generation failed"

    - name: Test rollback report content validation
      ansible.builtin.include_vars:
        file: "{{ rollback_reports.files[0].path }}"
        name: generated_report

    - name: Validate rollback report content structure
      ansible.builtin.assert:
        that:
          - generated_report.rollback_metadata is defined
          - generated_report.rollback_operations is defined
          - generated_report.health_checks is defined
          - generated_report.verification_results is defined
          - generated_report.summary is defined
          - generated_report.summary.total_operations | int > 0
          - generated_report.summary.rollback_success_rate | float >= 0
        fail_msg: "Generated rollback report has invalid structure"

    - name: Test rollback operation completeness
      ansible.builtin.assert:
        that:
          - item in expected_rollback_operations
        fail_msg: "Unexpected rollback operation: {{ item }}"
      loop: >
        {{ rollback_operations_results | map(attribute='operation') |
        list | unique }}

    - name: Test rollback success criteria validation
      ansible.builtin.assert:
        that:
          - generated_report.summary.rollback_success_rate | float >= 90.0
          - generated_report.summary.healthy_checks | int > 0
          - generated_report.summary.failed_operations | int == 0
        fail_msg: "Rollback success criteria not met"

  post_tasks:
    - name: Display emergency rollback test results
      ansible.builtin.debug:
        msg: |
          ✅ Emergency Rollback Playbook Test Results:

          Test Environment:
          - Device: >
              {{ rollback_state.device_name }}
          - Platform: >
              {{ rollback_state.platform }}
          - Rollback Types: >
              {{ rollback_types | join(', ') }}
          - Trigger: >
              {{ rollback_state.rollback_trigger }}

          Rollback Operations:
          - Total Operations: >
              {{ rollback_operations_results | length }}
          - Successful: >
              {{ rollback_operations_results |
                selectattr('status', 'equalto', 'SUCCESS') |
                list | length }}
          - Failed: >
              {{ rollback_operations_results |
                selectattr('status', 'equalto', 'FAILED') |
                list | length }}

          Health Checks:
          - Total Checks: >
              {{ health_check_results | length }}
          - Healthy: >
              {{ health_check_results |
                selectattr('status', 'equalto', 'HEALTHY') |
                list | length }}
          - Critical: >
              {{ health_check_results |
                selectattr('status', 'equalto', 'CRITICAL') |
                list | length }}

          Rollback Verification:
          - Success Rate: >
              {{ generated_report.summary.rollback_success_rate }}%
          - Average Recovery Time: >
              {{ generated_report.summary.average_recovery_time }}s

          Report Generation:
          - Reports Generated: >
              {{ rollback_reports.files | length }}
          - Report Location: >
              {{ rollback_results_path }}/logs/

          Status: Emergency rollback playbook testing SUCCESSFUL

    - name: Cleanup test artifacts
      ansible.builtin.file:
        path: "{{ rollback_results_path }}"
        state: absent
      failed_when: false
