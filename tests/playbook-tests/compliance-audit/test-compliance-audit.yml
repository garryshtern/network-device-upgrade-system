---
# Compliance Audit Playbook Test Suite
# Tests compliance verification and reporting functionality
- name: Test Compliance Audit Playbook
  hosts: localhost
  gather_facts: false
  vars:
    # Test configuration
    test_environment: true
    target_hosts: "localhost"
    compliance_standards:
      - "security_baseline"
      - "network_hardening"
      - "regulatory_compliance"
    generate_report: true

    # Mock device configuration
    ansible_network_os: "cisco.nxos.nxos"
    device_platform: "cisco_nxos"

    # Test audit parameters
    audit_results_path: "/tmp/compliance-test"
    expected_compliance_checks:
      - "security_baseline"
      - "network_hardening"
      - "password_policy"
      - "access_control"
      - "logging_configuration"

  pre_tasks:
    - name: Setup test environment for compliance audit
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ audit_results_path }}"
        - "{{ audit_results_path }}/{{ inventory_hostname }}"
        - /tmp/compliance-test/reports
        - /tmp/compliance-test/configs

    - name: Create mock device configuration for testing
      ansible.builtin.copy:
        content: |
          # Mock device configuration for compliance testing
          hostname test-device-01

          # Security baseline configuration
          security passwords min-length 12
          security passwords complexity enable

          # Access control configuration
          username admin privilege 15 secret test123
          enable secret test456

          # Logging configuration
          logging host 192.168.1.100
          logging level 6

          # Network hardening
          ip ssh version 2
          service tcp-keepalives-in
          service tcp-keepalives-out
        dest: "{{ audit_results_path }}/mock-device-config.txt"
        mode: '0644'

    - name: Create mock compliance standards database
      ansible.builtin.copy:
        content: |
          # Compliance Standards Database
          security_baseline:
            password_min_length: 12
            password_complexity: required
            enable_secret: required

          network_hardening:
            ssh_version: 2
            tcp_keepalives: enabled
            unused_services: disabled

          regulatory_compliance:
            logging_enabled: true
            access_logging: required
            audit_trail: enabled
        dest: "{{ audit_results_path }}/compliance-standards.yml"
        mode: '0644'

  tasks:
    - name: Test compliance audit initialization
      ansible.builtin.set_fact:
        compliance_results:
          device_name: "{{ inventory_hostname }}"
          platform: "{{ ansible_network_os }}"
          audit_timestamp: >-
            {{ ansible_date_time.epoch | default('1695340800') }}
          compliance_standards: "{{ compliance_standards }}"
          audit_status: "in_progress"

    - name: Validate compliance audit state initialization
      ansible.builtin.assert:
        that:
          - compliance_results is defined
          - compliance_results.device_name == inventory_hostname
          - compliance_results.platform is defined
          - compliance_results.audit_timestamp is defined
          - compliance_results.compliance_standards | length > 0
        fail_msg: "Compliance audit initialization failed"

    - name: Test compliance checks simulation
      ansible.builtin.set_fact:
        compliance_check_results: |
          {%- set results = [] -%}
          {%- for standard in compliance_standards -%}
            {%- for check in expected_compliance_checks -%}
              {%- set result = {
                  'standard': standard,
                  'check': check,
                  'status': 'PASS',
                  'description': 'Mock compliance check for ' ~ check,
                  'details': 'Simulated check result for testing'
                } -%}
              {%- set _ = results.append(result) -%}
            {%- endfor -%}
          {%- endfor -%}
          {{ results }}

    - name: Validate compliance check results structure
      ansible.builtin.assert:
        that:
          - item.standard is defined
          - item.check is defined
          - item.status in ['PASS', 'FAIL', 'WARNING']
          - item.description is defined
        fail_msg: >
          Compliance check result {{ item.check }} has invalid structure
      loop: "{{ compliance_check_results }}"

    - name: Test compliance report generation
      ansible.builtin.copy:
        content: |
          {
            "audit_metadata": {
              "device_name": "{{ compliance_results.device_name }}",
              "platform": "{{ compliance_results.platform }}",
              "audit_timestamp": "{{ compliance_results.audit_timestamp }}",
              "compliance_standards":
              {{ compliance_results.compliance_standards | to_json }}
            },
            "compliance_results": {{ compliance_check_results | to_json }},
            "summary": {
              "total_checks": {{ compliance_check_results | length }},
              "passed_checks": {{
                compliance_check_results |
                selectattr('status', 'equalto', 'PASS') |
                list | length
              }},
              "failed_checks": {{
                compliance_check_results |
                selectattr('status', 'equalto', 'FAIL') |
                list | length
              }},
              "warning_checks": {{
                compliance_check_results |
                selectattr('status', 'equalto', 'WARNING') |
                list | length
              }},
              "compliance_percentage": {{
                ((
                  compliance_check_results |
                  selectattr('status', 'equalto', 'PASS') |
                  list | length
                ) / compliance_check_results | length * 100) | round(2)
              }}
            }
          }
        dest: >-
          {{ audit_results_path }}/reports/compliance-report-{{-
          inventory_hostname }}-{{-
          ansible_date_time.epoch | default('test') }}.json
        mode: '0644'

    - name: Verify compliance report was generated
      ansible.builtin.stat:
        path: "{{ audit_results_path }}/reports/"
      register: report_directory

    - name: Find generated compliance reports
      ansible.builtin.find:
        paths: "{{ audit_results_path }}/reports/"
        patterns: "compliance-report-*.json"
      register: compliance_reports

    - name: Validate compliance report generation
      ansible.builtin.assert:
        that:
          - report_directory.stat.exists
          - compliance_reports.files | length > 0
        fail_msg: "Compliance report generation failed"

    - name: Test compliance report content validation
      ansible.builtin.include_vars:
        file: "{{ compliance_reports.files[0].path }}"
        name: generated_report

    - name: Validate compliance report content structure
      ansible.builtin.assert:
        that:
          - generated_report.audit_metadata is defined
          - generated_report.compliance_results is defined
          - generated_report.summary is defined
          - generated_report.summary.total_checks | int > 0
          - generated_report.summary.compliance_percentage | float >= 0
        fail_msg: "Generated compliance report has invalid structure"

    - name: Test compliance standards validation
      ansible.builtin.assert:
        that:
          - item in expected_compliance_checks
        fail_msg: "Unexpected compliance check: {{ item }}"
      loop: >
        {{ compliance_check_results | map(attribute='check') | list | unique }}

  post_tasks:
    - name: Display compliance audit test results
      ansible.builtin.debug:
        msg: |
          âœ… Compliance Audit Playbook Test Results:

          Test Environment:
          - Device: >
              {{ compliance_results.device_name }}
          - Platform:
              {{ compliance_results.platform }}
          - Standards:
              {{ compliance_standards | join(', ') }}

          Compliance Checks:
          - Total Checks: >
              {{ compliance_check_results | length }}
          - Passed: >
              {{ compliance_check_results |
                selectattr('status', 'equalto', 'PASS') |
                list | length }}
          - Failed: >
              {{ compliance_check_results |
                selectattr('status', 'equalto', 'FAIL') |
                list | length }}

          Report Generation:
          - Reports Generated: >
              {{ compliance_reports.files | length }}
          - Report Location: >
              {{ audit_results_path }}/reports/

          Status: Compliance audit playbook testing SUCCESSFUL

    - name: Cleanup test artifacts
      ansible.builtin.file:
        path: "{{ audit_results_path }}"
        state: absent
      failed_when: false
