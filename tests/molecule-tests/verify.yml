---
# Molecule verify playbook
# Validates that the converge playbook worked correctly

- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Verify test directories exist
      stat:
        path: "{{ item }}"
      register: test_dirs
      loop:
        - "/tmp/firmware"
        - "/tmp/backups"
      delegate_to: localhost
      run_once: true
      
    - name: Assert directories were created
      assert:
        that:
          - item.stat.exists
          - item.stat.isdir
        fail_msg: "Test directory not found: {{ item.item }}"
        success_msg: "✓ Test directory exists: {{ item.item }}"
      loop: "{{ test_dirs.results }}"
      loop_control:
        label: "{{ item.item }}"
      
    - name: Verify mock firmware file exists
      stat:
        path: "/tmp/firmware/cisco_nxos_10.1.2.bin"
      register: firmware_file
      delegate_to: localhost
      run_once: true
      
    - name: Assert firmware file was created
      assert:
        that:
          - firmware_file.stat.exists
          - firmware_file.stat.size > 0
        fail_msg: "Mock firmware file not found or empty"
        success_msg: "✓ Mock firmware file exists and has content"
        
    - name: Test variable consistency
      set_fact:
        test_vars:
          platform_type: "cisco_nxos"
          firmware_version: "9.3.10" 
          target_version: "10.1.2"
          
    - name: Verify variable types
      assert:
        that:
          - test_vars.platform_type is string
          - test_vars.firmware_version is match('^\d+\.\d+\.\d+$')
          - test_vars.target_version is match('^\d+\.\d+\.\d+$')
        fail_msg: "Variable type validation failed"
        success_msg: "✓ All variables have correct types and formats"
        
    - name: Test error handling
      block:
        - name: Attempt invalid operation
          fail:
            msg: "Simulated error for testing"
      rescue:
        - name: Verify error was caught
          debug:
            msg: "✓ Error handling works correctly"
            
    - name: Verify cleanup capability
      file:
        path: "/tmp/firmware/test_cleanup.tmp"
        state: touch
      delegate_to: localhost
      run_once: true
      
    - name: Test cleanup
      file:
        path: "/tmp/firmware/test_cleanup.tmp"
        state: absent
      delegate_to: localhost
      run_once: true
      
    - name: Verify file was removed
      stat:
        path: "/tmp/firmware/test_cleanup.tmp"
      register: cleanup_test
      delegate_to: localhost
      run_once: true
      
    - name: Assert cleanup worked
      assert:
        that:
          - not cleanup_test.stat.exists
        fail_msg: "Cleanup test failed - file still exists"
        success_msg: "✓ Cleanup functionality works correctly"
        
    - name: Final verification summary
      debug:
        msg:
          - "=== Molecule Verification Results ==="
          - "✓ Directory creation: PASSED"
          - "✓ File operations: PASSED"
          - "✓ Variable validation: PASSED"
          - "✓ Error handling: PASSED"
          - "✓ Cleanup operations: PASSED"
          - "=== All tests completed successfully ==="